{
  "record_id": "idx_95::1c::deepseek-ai/deepseek-coder-6.7b-instruct::seed0",
  "task_id": "idx_95",
  "category": "1c",
  "entry_point": "check_dict_case",
  "prompt_field": "prompt1c",
  "prompt_text": "\ndef check_dict_case(dict):\n    \"\"\"\n    Given a dictionary, return True if all keys are strings in lower \n    case or all keys are strings in upper case, else return False.\n    The function should return False is the given dictionary is empty.\n    Examples:\n    check_dict_case({\"a\":\"apple\", \"b\":\"banana\"}) should return False.\n    check_dict_case({\"a\":\"apple\", \"A\":\"banana\", \"B\":\"banana\"}) should return True.\n    check_dict_case({\"a\":\"apple\", 8:\"banana\", \"a\":\"apple\"}) should return False.\n    check_dict_case({\"Name\":\"John\", \"Age\":\"36\", \"City\":\"Houston\"}) should return True.\n    check_dict_case({\"STATE\":\"NC\", \"ZIP\":\"12345\" }) should return False.\n    \"\"\"\n",
  "prompt_final": "You are an expert software developer who writes high quality code. With below information, please either generate Python3 code (Respond directly with code only with markdown), or ask clarifying questions:\n\ndef check_dict_case(dict):\n    \"\"\"\n    Given a dictionary, return True if all keys are strings in lower \n    case or all keys are strings in upper case, else return False.\n    The function should return False is the given dictionary is empty.\n    Examples:\n    check_dict_case({\"a\":\"apple\", \"b\":\"banana\"}) should return False.\n    check_dict_case({\"a\":\"apple\", \"A\":\"banana\", \"B\":\"banana\"}) should return True.\n    check_dict_case({\"a\":\"apple\", 8:\"banana\", \"a\":\"apple\"}) should return False.\n    check_dict_case({\"Name\":\"John\", \"Age\":\"36\", \"City\":\"Houston\"}) should return True.\n    check_dict_case({\"STATE\":\"NC\", \"ZIP\":\"12345\" }) should return False.\n    \"\"\"",
  "prompt_sha256": "3829864a4516d1336acbf48d5be2399c60d51eaa15daca9dfd697ded973bdff4",
  "model_name": "deepseek-ai/deepseek-coder-6.7b-instruct",
  "seed": 0,
  "gen_params": {
    "max_new_tokens": 256,
    "temperature": 1.0,
    "top_p": 0.95,
    "do_sample": true,
    "repetition_penalty": 1.0
  },
  "generated_text": "You are an expert software developer who writes high quality code. With below information, please either generate Python3 code (Respond directly with code only with markdown), or ask clarifying questions:\n\ndef check_dict_case(dict):\n    \"\"\"\n    Given a dictionary, return True if all keys are strings in lower \n    case or all keys are strings in upper case, else return False.\n    The function should return False is the given dictionary is empty.\n    Examples:\n    check_dict_case({\"a\":\"apple\", \"b\":\"banana\"}) should return False.\n    check_dict_case({\"a\":\"apple\", \"A\":\"banana\", \"B\":\"banana\"}) should return True.\n    check_dict_case({\"a\":\"apple\", 8:\"banana\", \"a\":\"apple\"}) should return False.\n    check_dict_case({\"Name\":\"John\", \"Age\":\"36\", \"City\":\"Houston\"}) should return True.\n    check_dict_case({\"STATE\":\"NC\", \"ZIP\":\"12345\" }) should return False.\n    \"\"\"\n    if dict:\n        key_list = [key for key in dict.keys()]\n        if all(str(k).islower() for k in key_list) or all(str(k).isupper() for k in key_list):\n            return True\n        else:\n            return False\n    else:\n        return False\n\n#tests/test_check_dict_case.py\nimport unittest\nfrom check_dict_case import check_dict_case\n\nclass TestCheckDictCase(unittest.TestCase):\n    def test_all_keys_lower(self):\n        self.assertTrue(check_dict_case({\"a\":\"apple\", \"b\":\"banana\"}))\n\n    def test_mixed_case_keys(self):\n        self.assertFalse(check_dict_case({\"a\":\"apple\", \"A\":\"banana\", \"B\":\"banana\"}))\n\n    def test_non_string_keys(self):\n        self.assertFalse(check_dict_case({\"a\":\"apple\", 8:\"banana\", \"a\":\"apple\"}))\n\n    def",
  "gen_raw": {},
  "contains_code": true,
  "code_detected_method": "def-scan",
  "extracted_code": "def check_dict_case(dict):\n    \"\"\"\n    Given a dictionary, return True if all keys are strings in lower \n    case or all keys are strings in upper case, else return False.\n    The function should return False is the given dictionary is empty.\n    Examples:\n    check_dict_case({\"a\":\"apple\", \"b\":\"banana\"}) should return False.\n    check_dict_case({\"a\":\"apple\", \"A\":\"banana\", \"B\":\"banana\"}) should return True.\n    check_dict_case({\"a\":\"apple\", 8:\"banana\", \"a\":\"apple\"}) should return False.\n    check_dict_case({\"Name\":\"John\", \"Age\":\"36\", \"City\":\"Houston\"}) should return True.\n    check_dict_case({\"STATE\":\"NC\", \"ZIP\":\"12345\" }) should return False.\n    \"\"\"\n    if dict:\n        key_list = [key for key in dict.keys()]\n        if all(str(k).islower() for k in key_list) or all(str(k).isupper() for k in key_list):\n            return True\n        else:\n            return False\n    else:\n        return False\n\n#tests/test_check_dict_case.py\nimport unittest\nfrom check_dict_case import check_dict_case\n\nclass TestCheckDictCase(unittest.TestCase):\n    def test_all_keys_lower(self):\n        self.assertTrue(check_dict_case({\"a\":\"apple\", \"b\":\"banana\"}))\n\n    def test_mixed_case_keys(self):\n        self.assertFalse(check_dict_case({\"a\":\"apple\", \"A\":\"banana\", \"B\":\"banana\"}))\n\n    def test_non_string_keys(self):\n        self.assertFalse(check_dict_case({\"a\":\"apple\", 8:\"banana\", \"a\":\"apple\"}))\n\n    def",
  "is_question": false,
  "extracted_questions": [],
  "question_count": 0,
  "first_question": null,
  "question_chars": 0,
  "latency_sec": 74.94956040382385,
  "committee_label": null,
  "evaluator_quality": null,
  "evaluator_answers": null
}