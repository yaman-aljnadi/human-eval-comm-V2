{
  "record_id": "idx_95::1a::gpt-3.5-turbo::seed0",
  "task_id": "idx_95",
  "category": "1a",
  "entry_point": "check_dict_case",
  "prompt_field": "prompt1a",
  "prompt_text": "\ndef check_dict_case(dict):\n    \"\"\"\n    Given a dictionary, return True if some or all keys are strings in lower \n    case or some or all keys are strings in upper case, else return False.\n    The function should return False is the given dictionary is empty.\n    Examples:\n    check_dict_case({\"a\":\"apple\", \"b\":\"banana\"}) should return True.\n    check_dict_case({\"a\":\"apple\", \"A\":\"banana\", \"B\":\"banana\"}) should return False.\n    check_dict_case({\"a\":\"apple\", 8:\"banana\", \"a\":\"apple\"}) should return False.\n    check_dict_case({\"Name\":\"John\", \"Age\":\"36\", \"City\":\"Houston\"}) should return False.\n    check_dict_case({\"STATE\":\"NC\", \"ZIP\":\"12345\" }) should return True.\n    \"\"\"\n",
  "prompt_final": "You are an expert software developer who writes high quality code. With below information, please either generate Python3 code (Respond directly with code only with markdown), or ask clarifying questions:\n\ndef check_dict_case(dict):\n    \"\"\"\n    Given a dictionary, return True if some or all keys are strings in lower \n    case or some or all keys are strings in upper case, else return False.\n    The function should return False is the given dictionary is empty.\n    Examples:\n    check_dict_case({\"a\":\"apple\", \"b\":\"banana\"}) should return True.\n    check_dict_case({\"a\":\"apple\", \"A\":\"banana\", \"B\":\"banana\"}) should return False.\n    check_dict_case({\"a\":\"apple\", 8:\"banana\", \"a\":\"apple\"}) should return False.\n    check_dict_case({\"Name\":\"John\", \"Age\":\"36\", \"City\":\"Houston\"}) should return False.\n    check_dict_case({\"STATE\":\"NC\", \"ZIP\":\"12345\" }) should return True.\n    \"\"\"",
  "prompt_sha256": "1914a4fbdf43f7e8e82b8cfa1dbe7a124ccc6d7b3542fc1dc2379092b0345ce0",
  "model_name": "gpt-3.5-turbo",
  "seed": 0,
  "gen_params": {
    "max_new_tokens": 256,
    "temperature": 1.0,
    "top_p": 0.95,
    "do_sample": true,
    "repetition_penalty": 1.0
  },
  "generated_text": "```python\ndef check_dict_case(dict):\n    if not dict:\n        return False\n\n    lower_case_keys = False\n    upper_case_keys = False\n    \n    for key in dict:\n        if isinstance(key, str) and key.islower():\n            lower_case_keys = True\n        elif isinstance(key, str) and key.isupper():\n            upper_case_keys = True\n            \n    if (lower_case_keys and not upper_case_keys) or (upper_case_keys and not lower_case_keys):\n        return True\n    else:\n        return False\n```",
  "gen_raw": {},
  "contains_code": true,
  "code_detected_method": "fenced",
  "extracted_code": "def check_dict_case(dict):\n    if not dict:\n        return False\n\n    lower_case_keys = False\n    upper_case_keys = False\n    \n    for key in dict:\n        if isinstance(key, str) and key.islower():\n            lower_case_keys = True\n        elif isinstance(key, str) and key.isupper():\n            upper_case_keys = True\n            \n    if (lower_case_keys and not upper_case_keys) or (upper_case_keys and not lower_case_keys):\n        return True\n    else:\n        return False",
  "is_question": false,
  "extracted_questions": [],
  "question_count": 0,
  "first_question": null,
  "question_chars": 0,
  "latency_sec": 0.9128713607788086,
  "committee_label": null,
  "evaluator_quality": null,
  "evaluator_answers": null
}