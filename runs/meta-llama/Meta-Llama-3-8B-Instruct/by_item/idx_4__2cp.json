{
  "record_id": "idx_4::2cp::meta-llama/Meta-Llama-3-8B-Instruct::seed0",
  "task_id": "idx_4",
  "category": "2cp",
  "entry_point": "mean_absolute_deviation",
  "prompt_field": "prompt2cp",
  "prompt_text": "from typing import List\n\n\ndef mean_absolute_deviation(numbers: List[float]) -> float:\n    \"\"\" For a given list of input numbers, calculate Mean Absolute Deviation. \n    >>> mean_absolute_deviation([1.0, 2.0, 3.0, 4.0])\n    1.5\n    \"\"\"\n",
  "prompt_final": "You are an expert software developer who writes high quality code. With below information, please either generate Python3 code (Respond directly with code only with markdown), or ask clarifying questions:\n\nfrom typing import List\n\n\ndef mean_absolute_deviation(numbers: List[float]) -> float:\n    \"\"\" For a given list of input numbers, calculate Mean Absolute Deviation. \n    >>> mean_absolute_deviation([1.0, 2.0, 3.0, 4.0])\n    1.5\n    \"\"\"",
  "prompt_sha256": "1f022e25bbb381664e6c0fc3adf20a2b09250ed40d9767ae9d7e3797f6fdd3f8",
  "model_name": "meta-llama/Meta-Llama-3-8B-Instruct",
  "seed": 0,
  "gen_params": {
    "max_new_tokens": 256,
    "temperature": 1.0,
    "top_p": 0.95,
    "do_sample": true,
    "repetition_penalty": 1.0
  },
  "generated_text": "You are an expert software developer who writes high quality code. With below information, please either generate Python3 code (Respond directly with code only with markdown), or ask clarifying questions:\n\nfrom typing import List\n\n\ndef mean_absolute_deviation(numbers: List[float]) -> float:\n    \"\"\" For a given list of input numbers, calculate Mean Absolute Deviation. \n    >>> mean_absolute_deviation([1.0, 2.0, 3.0, 4.0])\n    1.5\n    \"\"\"\n\n\ndef sample_std_dev(numbers: List[float], n: int) -> float:\n    \"\"\" For a given list of input numbers, calculate Sample Standard Deviation.\n    >>> sample_std_dev([1.0, 2.0, 3.0, 4.0], 4)\n    1.118033988749895\n    \"\"\"\n```\n\n## Requirements\n-   For calculating Mean Absolute Deviation (MAD) for a set of n input numbers, the function should return the mean of the absolute differences between the mean of the numbers and each number in the set.\n-   For calculating Sample Standard Deviation (SDD) for a set of n input numbers, the function should return the square root of the average of the squared differences between each number and the mean of the numbers.\n\n## Code\n\n\nYour code should be implemented in Python3 and be functional-programming-style. \nNo other instructions apply. Directly respond with the Python3 code. **[Markdown](https://github.github-assets.com/images/modules/login/fp-logo-dark.png)**\n\n```\n```python\n```  # add your code here  ````\n```\n```\n\nLet me know if you have any questions or need further clarification on this prompt. Thank you.",
  "gen_raw": {},
  "contains_code": true,
  "code_detected_method": "fenced",
  "extracted_code": "## Requirements\n-   For calculating Mean Absolute Deviation (MAD) for a set of n input numbers, the function should return the mean of the absolute differences between the mean of the numbers and each number in the set.\n-   For calculating Sample Standard Deviation (SDD) for a set of n input numbers, the function should return the square root of the average of the squared differences between each number and the mean of the numbers.\n\n## Code\n\n\nYour code should be implemented in Python3 and be functional-programming-style. \nNo other instructions apply. Directly respond with the Python3 code. **[Markdown](https://github.github-assets.com/images/modules/login/fp-logo-dark.png)**",
  "is_question": false,
  "extracted_questions": [],
  "question_count": 0,
  "first_question": null,
  "question_chars": 0,
  "latency_sec": 70.36723375320435,
  "committee_label": null,
  "evaluator_quality": null,
  "evaluator_answers": null
}