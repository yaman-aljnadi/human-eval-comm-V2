{
  "record_id": "idx_21::1a::gemini-2.5-flash-lite::seed0",
  "task_id": "idx_21",
  "category": "1a",
  "entry_point": "rescale_to_unit",
  "prompt_field": "prompt1a",
  "prompt_text": "from typing import List\n\n\ndef rescale(numbers: List[float]) -> List[float]:\n    \"\"\" Given list of numbers (of at least two elements), apply a linear transform to that list,\n    such that the one number will become 0 and another will become 1\n    >>> rescale([1.0, 2.0, 3.0, 4.0, 5.0])\n    [0.0, 0.25, 0.5, 0.75, 1.0]\n    \"\"\"\n",
  "prompt_final": "You are an expert software developer who writes high quality code. With below information, please either generate Python3 code (Respond directly with code only with markdown), or ask clarifying questions:\n\nfrom typing import List\n\n\ndef rescale(numbers: List[float]) -> List[float]:\n    \"\"\" Given list of numbers (of at least two elements), apply a linear transform to that list,\n    such that the one number will become 0 and another will become 1\n    >>> rescale([1.0, 2.0, 3.0, 4.0, 5.0])\n    [0.0, 0.25, 0.5, 0.75, 1.0]\n    \"\"\"",
  "prompt_sha256": "14634f6cc81a9c57c22e53c6ddb47413ec617026ae9925051f79b4985ba88dab",
  "model_name": "gemini-2.5-flash-lite",
  "seed": 0,
  "gen_params": {
    "max_new_tokens": 256,
    "temperature": 1.0,
    "top_p": 0.95,
    "do_sample": true,
    "repetition_penalty": 1.0
  },
  "generated_text": "```python\nfrom typing import List\n\n\ndef rescale(numbers: List[float]) -> List[float]:\n    \"\"\" Given list of numbers (of at least two elements), apply a linear transform to that list,\n    such that the one number will become 0 and another will become 1\n    >>> rescale([1.0, 2.0, 3.0, 4.0, 5.0])\n    [0.0, 0.25, 0.5, 0.75, 1.0]\n    \"\"\"\n    min_val = min(numbers)\n    max_val = max(numbers)\n    if min_val == max_val:\n        # If all numbers are the same, they all become 0.5 (or any consistent value)\n        # or as per the problem, one becomes 0 and another 1. This implies distinct numbers.\n        # For the sake of a valid transformation where min becomes 0 and max becomes 1,\n        # and assuming at least two elements are present, this case might suggest an error\n        # or require a specific handling. Here, we'll return a",
  "gen_raw": {},
  "contains_code": true,
  "code_detected_method": "def-scan",
  "extracted_code": "def rescale(numbers: List[float]) -> List[float]:\n    \"\"\" Given list of numbers (of at least two elements), apply a linear transform to that list,\n    such that the one number will become 0 and another will become 1\n    >>> rescale([1.0, 2.0, 3.0, 4.0, 5.0])\n    [0.0, 0.25, 0.5, 0.75, 1.0]\n    \"\"\"\n    min_val = min(numbers)\n    max_val = max(numbers)\n    if min_val == max_val:\n        # If all numbers are the same, they all become 0.5 (or any consistent value)\n        # or as per the problem, one becomes 0 and another 1. This implies distinct numbers.\n        # For the sake of a valid transformation where min becomes 0 and max becomes 1,\n        # and assuming at least two elements are present, this case might suggest an error\n        # or require a specific handling. Here, we'll return a",
  "is_question": false,
  "extracted_questions": [],
  "question_count": 0,
  "first_question": null,
  "question_chars": 0,
  "latency_sec": 1.7408573627471924,
  "committee_label": null,
  "evaluator_quality": null,
  "evaluator_answers": null
}