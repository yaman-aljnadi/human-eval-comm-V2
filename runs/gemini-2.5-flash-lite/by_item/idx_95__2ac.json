{
  "record_id": "idx_95::2ac::gemini-2.5-flash-lite::seed0",
  "task_id": "idx_95",
  "category": "2ac",
  "entry_point": "check_dict_case",
  "prompt_field": "prompt2ac",
  "prompt_text": "\ndef check_dict_case(dict):\n    \"\"\"\n    Given a dictionary, return True if some or all keys are strings in lower \n    case or some or all keys are strings in upper case, else return False.\n    The function should return False is the given dictionary is empty.\n    Examples:\n    check_dict_case({\"a\":\"apple\", \"b\":\"banana\"}) should return False.\n    check_dict_case({\"a\":\"apple\", \"A\":\"banana\", \"B\":\"banana\"}) should return True.\n    check_dict_case({\"a\":\"apple\", 8:\"banana\", \"a\":\"apple\"}) should return True.\n    check_dict_case({\"Name\":\"John\", \"Age\":\"36\", \"City\":\"Houston\"}) should return True.\n    check_dict_case({\"STATE\":\"NC\", \"ZIP\":\"12345\" }) should return False.\n    \"\"\"\n",
  "prompt_final": "You are an expert software developer who writes high quality code. With below information, please either generate Python3 code (Respond directly with code only with markdown), or ask clarifying questions:\n\ndef check_dict_case(dict):\n    \"\"\"\n    Given a dictionary, return True if some or all keys are strings in lower \n    case or some or all keys are strings in upper case, else return False.\n    The function should return False is the given dictionary is empty.\n    Examples:\n    check_dict_case({\"a\":\"apple\", \"b\":\"banana\"}) should return False.\n    check_dict_case({\"a\":\"apple\", \"A\":\"banana\", \"B\":\"banana\"}) should return True.\n    check_dict_case({\"a\":\"apple\", 8:\"banana\", \"a\":\"apple\"}) should return True.\n    check_dict_case({\"Name\":\"John\", \"Age\":\"36\", \"City\":\"Houston\"}) should return True.\n    check_dict_case({\"STATE\":\"NC\", \"ZIP\":\"12345\" }) should return False.\n    \"\"\"",
  "prompt_sha256": "6666e066fc0af835c108719f01b118245b2156107fe42f7d5dbac14cbe3ef218",
  "model_name": "gemini-2.5-flash-lite",
  "seed": 0,
  "gen_params": {
    "max_new_tokens": 256,
    "temperature": 1.0,
    "top_p": 0.95,
    "do_sample": true,
    "repetition_penalty": 1.0
  },
  "generated_text": "```python\ndef check_dict_case(dict_):\n    \"\"\"\n    Given a dictionary, return True if some or all keys are strings in lower \n    case or some or all keys are strings in upper case, else return False.\n    The function should return False is the given dictionary is empty.\n    Examples:\n    check_dict_case({\"a\":\"apple\", \"b\":\"banana\"}) should return False.\n    check_dict_case({\"a\":\"apple\", \"A\":\"banana\", \"B\":\"banana\"}) should return True.\n    check_dict_case({\"a\":\"apple\", 8:\"banana\", \"a\":\"apple\"}) should return True.\n    check_dict_case({\"Name\":\"John\", \"Age\":\"36\", \"City\":\"Houston\"}) should return True.\n    check_dict_case({\"STATE\":\"NC\", \"ZIP\":\"12345\" }) should return False.\n    \"\"\"\n    if not dict_:\n        return False\n\n    all_lower = True\n    all_upper = True\n    has_string_keys = False\n\n    for key in dict_:\n        if isinstance(key, str):\n            has_string_keys =",
  "gen_raw": {},
  "contains_code": true,
  "code_detected_method": "def-scan",
  "extracted_code": "def check_dict_case(dict_):\n    \"\"\"\n    Given a dictionary, return True if some or all keys are strings in lower \n    case or some or all keys are strings in upper case, else return False.\n    The function should return False is the given dictionary is empty.\n    Examples:\n    check_dict_case({\"a\":\"apple\", \"b\":\"banana\"}) should return False.\n    check_dict_case({\"a\":\"apple\", \"A\":\"banana\", \"B\":\"banana\"}) should return True.\n    check_dict_case({\"a\":\"apple\", 8:\"banana\", \"a\":\"apple\"}) should return True.\n    check_dict_case({\"Name\":\"John\", \"Age\":\"36\", \"City\":\"Houston\"}) should return True.\n    check_dict_case({\"STATE\":\"NC\", \"ZIP\":\"12345\" }) should return False.\n    \"\"\"\n    if not dict_:\n        return False\n\n    all_lower = True\n    all_upper = True\n    has_string_keys = False\n\n    for key in dict_:\n        if isinstance(key, str):\n            has_string_keys =",
  "is_question": false,
  "extracted_questions": [],
  "question_count": 0,
  "first_question": null,
  "question_chars": 0,
  "latency_sec": 1.5404725074768066,
  "committee_label": null,
  "evaluator_quality": null,
  "evaluator_answers": null
}